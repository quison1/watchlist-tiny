
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> func_load_packages <- function(pkg){
+   # function to install and require packages
+   # https://gist.github.com/stevenworthington/3178163
+   new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
+   if (length(new.pkg)) 
+     install.packages(new.pkg, dependencies = TRUE)
+   sapply(pkg, require, character.only = TRUE)
+ }
> 
> libs <- c("tidyverse", "tidyquant")
> func_load_packages(libs) # load packages
Loading required package: tidyverse
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.3     v purrr   0.3.4
v tibble  3.0.6     v dplyr   1.0.4
v tidyr   1.1.2     v stringr 1.4.0
v readr   1.4.0     v forcats 0.5.1
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
Loading required package: tidyquant
Loading required package: lubridate

Attaching package: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union

Loading required package: PerformanceAnalytics
Loading required package: xts
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Attaching package: 'xts'

The following objects are masked from 'package:dplyr':

    first, last


Attaching package: 'PerformanceAnalytics'

The following object is masked from 'package:graphics':

    legend

Loading required package: quantmod
Loading required package: TTR
Registered S3 method overwritten by 'quantmod':
  method            from
  as.zoo.data.frame zoo 
== Need to Learn tidyquant? ====================================================
Business Science offers a 1-hour course - Learning Lab #9: Performance Analysis & Portfolio Optimization with tidyquant!
</> Learn more at: https://university.business-science.io/p/learning-labs-pro </>

Attaching package: 'tidyquant'

The following object is masked _by_ '.GlobalEnv':

    FANG

tidyverse tidyquant 
     TRUE      TRUE 
> 
> # datetime specification ----
> today <- Sys.Date()
> past_horizon_long <- Sys.Date() %m+% months(-36) #lubridate required
> past_horizon_medium <- Sys.Date() %m+% months(-18) #lubridate required
> past_horizon_short <- Sys.Date() %m+% months(-3) #lubridate required
> 
> # obtain ticket list, my-list ----
> 
> print(getwd())
[1] "C:/cloud/git-project/watchlist-tiny"
> 
> filtered_list <- read.csv("rprog/simon-all.csv", header = F)[, 1] %>% as.character()
> 
> # download data from yahoo finance ----
> 
> yf_data <- filtered_list %>% 
+   tq_get(get  = "stock.prices",
+          from = past_horizon_long,
+          to   = today) %>%
+   drop_na()
Warning messages:
1: Problem with `mutate()` input `data..`.
i x = 'ANZ.AZ', get = 'stock.prices': Error in getSymbols.yahoo(Symbols = "ANZ.AZ", env = <environment>, verbose = FALSE, : Unable to import "ANZ.AZ".
argument "conn" is missing, with no default
 Removing ANZ.AZ.
i Input `data..` is `purrr::map(...)`. 
2: In UseMethod("as.list") :
  closing unused connection 3 (https://query1.finance.yahoo.com/v7/finance/download/ANZ.AZ?period1=1520985600&period2=1615680000&interval=1d&events=history&crumb=IlBPt7vKSgN)
3: Problem with `mutate()` input `data..`.
i x = 'FLT.AT', get = 'stock.prices': Error in getSymbols.yahoo(Symbols = "FLT.AT", env = <environment>, verbose = FALSE, : Unable to import "FLT.AT".
argument "conn" is missing, with no default
 Removing FLT.AT.
i Input `data..` is `purrr::map(...)`. 
> 
> temp2 <- bind_rows(yf_data)
> 
> glimpse(temp2)
Rows: 9,880
Columns: 8
$ symbol   <chr> "ALG.AX", "ALG.AX", "ALG.AX", "ALG.AX", "ALG.AX", "ALG.AX"...
$ date     <date> 2018-03-14, 2018-03-15, 2018-03-16, 2018-03-19, 2018-03-2...
$ open     <dbl> 1.890, 1.925, 1.945, 1.925, 1.880, 1.895, 1.890, 1.880, 1....
$ high     <dbl> 1.940, 1.945, 1.945, 1.930, 1.900, 1.900, 1.910, 1.910, 1....
$ low      <dbl> 1.890, 1.900, 1.875, 1.875, 1.865, 1.870, 1.870, 1.870, 1....
$ close    <dbl> 1.930, 1.940, 1.900, 1.885, 1.885, 1.890, 1.910, 1.910, 1....
$ volume   <dbl> 1405287, 1890092, 1627416, 1222338, 708864, 905723, 602449...
$ adjusted <dbl> 1.867896, 1.877574, 1.838861, 1.824344, 1.824344, 1.829183...
> 
> FANG_macd <- temp2 %>% # yf_data %>% drop_na() %>%
+   group_by(symbol) %>%
+   tq_mutate(select     = close, 
+             mutate_fun = MACD, 
+             nFast      = 12, 
+             nSlow      = 26, 
+             nSig       = 9, 
+             maType     = SMA,
+             percent    = F) %>%
+   mutate(diff = macd - signal,
+          signDiff = diff / abs(diff),
+          signChange=c(NA, diff(signDiff)),
+          # if signChange = -2 means sell, +2 means buy
+          macd_buy = ifelse(signChange == 2 & macd < 0, 1, 0),
+          macd_sell = ifelse(signChange == -2 & macd > 0, 1, 0)
+   )
Warning message:
closing unused connection 3 (https://query1.finance.yahoo.com/v7/finance/download/FLT.AT?period1=1520985600&period2=1615680000&interval=1d&events=history&crumb=yKaOdWFP0Y4) 
> 
> FANG_rsi <- temp2 %>% # yf_data %>% drop_na() %>%
+   group_by(symbol) %>%
+   tq_mutate(select     = close, 
+             mutate_fun = RSI) %>%
+   mutate(rsi_sell = ifelse(rsi > 70, 1, 0), # overbought signals sell
+          rsi_buy = ifelse(rsi < 30, 1, 0) # oversold signals buy
+   )
> 
> FANG <- left_join(FANG_macd, FANG_rsi)
Joining, by = c("symbol", "date", "open", "high", "low", "close", "volume", "adjusted")
> 
> plot_price <- function(chosen_ticker, starting_data) {
+   FANG %>%
+     filter(date >= as_date(starting_data)) %>%
+     filter(symbol %in% chosen_ticker) %>%
+     mutate(tradeSignal = macd_buy + macd_sell + rsi_buy + rsi_sell) %>%
+     ggplot(aes(x = date)) +
+     geom_line(aes(y = close)) +
+     # overlay with signals
+     geom_vline(data = . %>% filter(macd_buy == 1), aes(xintercept = date),
+                col = "maroon", alpha = 0.25, lty = 2, lwd = 1) +
+     geom_vline(data = . %>% filter(macd_sell == 1), aes(xintercept = date),
+                col = "darkgreen", alpha = 0.25, lty = 2, lwd = 1) +
+     geom_vline(data = . %>% filter(rsi_buy == 1), aes(xintercept = date),
+                col = "maroon", alpha = 0.25, lty = 1) +
+     geom_vline(data = . %>% filter(rsi_sell == 1), aes(xintercept = date),
+                col = "darkgreen", alpha = 0.25, lty = 1) +
+     labs(y = "", x = "", color = "", title = chosen_ticker) +
+     theme_tq() +
+     theme(panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
+ }
> 
> plot_macd <- function(chosen_ticker, starting_data) {
+   FANG %>%
+     filter(date >= as_date(starting_data)) %>%
+     filter(symbol %in% chosen_ticker) %>%
+     ggplot(aes(x = date)) + 
+     geom_hline(yintercept = 0, color = palette_light()[[1]]) +
+     geom_line(aes(y = macd), color = "orange") +
+     geom_line(aes(y = signal), color = "blue") +
+     # scale_x_date(date_labels = "%d", date_breaks = "1 week") +
+     geom_vline(data = . %>% filter(macd_buy == 1), aes(xintercept = date),
+                col = "maroon", alpha = 0.25, lty = 2, lwd = 1) +
+     geom_vline(data = . %>% filter(macd_sell == 1), aes(xintercept = date),
+                col = "darkgreen", alpha = 0.25, lty = 2, lwd = 1) +
+     labs(y = "", x = "", color = "", title = chosen_ticker) +
+     theme_tq() +
+     theme(panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
+ }
> 
> plot_rsi <- function(chosen_ticker, starting_date) {
+   FANG %>%
+     filter(date >= as_date(starting_date)) %>%
+     filter(symbol %in% chosen_ticker) %>%
+     ggplot(aes(x = date)) + 
+     geom_line(aes(y = rsi), col="purple") +
+     # scale_x_date(date_labels = "%d", date_breaks = "1 week") +
+     geom_hline(yintercept = c(30, 70), color = "black") +
+     geom_vline(data = . %>% filter(rsi_buy == 1), aes(xintercept = date),
+                col = "maroon", alpha = 0.25, lty = 1) +
+     geom_vline(data = . %>% filter(rsi_sell == 1), aes(xintercept = date),
+                col = "darkgreen", alpha = 0.25, lty = 1) +
+     labs(y = "", x = "", color = "", title = chosen_ticker) +
+     coord_cartesian(ylim = c(10, 90)) +
+     theme_tq() +
+     theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(),
+           panel.grid.major.x = element_blank(), panel.grid.minor = element_blank())
+ }
> 
> export_pictures <- function(ticker, location = "") {
+   ggsave(paste0(location, ticker, "-medium-price.png"), plot = plot_price(ticker, past_horizon_medium) + scale_x_date(date_breaks = "2 months", date_labels = "%b-%Y"), width=16, height=8, units="cm", dpi = 120)
+   ggsave(paste0(location, ticker, "-medium-macd.png"), plot = plot_macd(ticker, past_horizon_medium) + scale_x_date(date_breaks = "2 months", date_labels = "%b-%Y"), width=16, height=8, units="cm", dpi = 120)
+   ggsave(paste0(location, ticker, "-medium-rsi.png"), plot = plot_rsi(ticker, past_horizon_medium) + scale_x_date(date_breaks = "2 months", date_labels = "%b-%Y"), width=16, height=8, units="cm", dpi = 120)
+   ggsave(paste0(location, ticker, "-short-price.png"), plot = plot_price(ticker, past_horizon_short) + scale_x_date(date_breaks = "2 weeks", date_labels = "%d-%b"), width=16, height=8, units="cm", dpi = 120)
+   ggsave(paste0(location, ticker, "-short-macd.png"), plot = plot_macd(ticker, past_horizon_short) + scale_x_date(date_breaks = "2 weeks", date_labels = "%d-%b"), width=16, height=8, units="cm", dpi = 120)
+   ggsave(paste0(location, ticker, "-short-rsi.png"), plot = plot_rsi(ticker, past_horizon_short) + scale_x_date(date_breaks = "2 weeks", date_labels = "%d-%b"), width=16, height=8, units="cm", dpi = 120)
+ }
> 
> library(readr)
> 
> location_asset <- "_assets/"
> files_asset <- list.files(location_asset)
> sapply(paste0(location_asset, files_asset), file.remove)
  _assets/A2M.AX-medium-macd.png  _assets/A2M.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/A2M.AX-medium-rsi.png    _assets/A2M.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/A2M.AX-short-price.png     _assets/A2M.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/ALG.AX-medium-macd.png  _assets/ALG.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/ALG.AX-medium-rsi.png    _assets/ALG.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/ALG.AX-short-price.png     _assets/ALG.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/ANZ.AZ-medium-macd.png  _assets/ANZ.AZ-medium-price.png 
                            TRUE                             TRUE 
   _assets/ANZ.AZ-medium-rsi.png    _assets/ANZ.AZ-short-macd.png 
                            TRUE                             TRUE 
  _assets/ANZ.AZ-short-price.png     _assets/ANZ.AZ-short-rsi.png 
                            TRUE                             TRUE 
  _assets/AZJ.AX-medium-macd.png  _assets/AZJ.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/AZJ.AX-medium-rsi.png    _assets/AZJ.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/AZJ.AX-short-price.png     _assets/AZJ.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/BHP.AX-medium-macd.png  _assets/BHP.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/BHP.AX-medium-rsi.png    _assets/BHP.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/BHP.AX-short-price.png     _assets/BHP.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/CAN.AX-medium-macd.png  _assets/CAN.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/CAN.AX-medium-rsi.png    _assets/CAN.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/CAN.AX-short-price.png     _assets/CAN.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/FLT.AT-medium-macd.png  _assets/FLT.AT-medium-price.png 
                            TRUE                             TRUE 
   _assets/FLT.AT-medium-rsi.png    _assets/FLT.AT-short-macd.png 
                            TRUE                             TRUE 
  _assets/FLT.AT-short-price.png     _assets/FLT.AT-short-rsi.png 
                            TRUE                             TRUE 
  _assets/LVT.AX-medium-macd.png  _assets/LVT.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/LVT.AX-medium-rsi.png    _assets/LVT.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/LVT.AX-short-price.png     _assets/LVT.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/QAN.AX-medium-macd.png  _assets/QAN.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/QAN.AX-medium-rsi.png    _assets/QAN.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/QAN.AX-short-price.png     _assets/QAN.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/TNT.AX-medium-macd.png  _assets/TNT.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/TNT.AX-medium-rsi.png    _assets/TNT.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/TNT.AX-short-price.png     _assets/TNT.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/VAS.AX-medium-macd.png  _assets/VAS.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/VAS.AX-medium-rsi.png    _assets/VAS.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/VAS.AX-short-price.png     _assets/VAS.AX-short-rsi.png 
                            TRUE                             TRUE 
 _assets/VDHG.AX-medium-macd.png _assets/VDHG.AX-medium-price.png 
                            TRUE                             TRUE 
  _assets/VDHG.AX-medium-rsi.png   _assets/VDHG.AX-short-macd.png 
                            TRUE                             TRUE 
 _assets/VDHG.AX-short-price.png    _assets/VDHG.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/VGS.AX-medium-macd.png  _assets/VGS.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/VGS.AX-medium-rsi.png    _assets/VGS.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/VGS.AX-short-price.png     _assets/VGS.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/WPL.AX-medium-macd.png  _assets/WPL.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/WPL.AX-medium-rsi.png    _assets/WPL.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/WPL.AX-short-price.png     _assets/WPL.AX-short-rsi.png 
                            TRUE                             TRUE 
  _assets/XRO.AX-medium-macd.png  _assets/XRO.AX-medium-price.png 
                            TRUE                             TRUE 
   _assets/XRO.AX-medium-rsi.png    _assets/XRO.AX-short-macd.png 
                            TRUE                             TRUE 
  _assets/XRO.AX-short-price.png     _assets/XRO.AX-short-rsi.png 
                            TRUE                             TRUE 
> 
> location_project <- "_projects/"
> files_project <- list.files(location_project)
> sapply(paste0(location_project, files_project), file.remove)
 _projects/A2M.AX.md  _projects/ALG.AX.md  _projects/ANZ.AZ.md 
                TRUE                 TRUE                 TRUE 
 _projects/AZJ.AX.md  _projects/BHP.AX.md  _projects/CAN.AX.md 
                TRUE                 TRUE                 TRUE 
 _projects/FLT.AT.md  _projects/LVT.AX.md  _projects/QAN.AX.md 
                TRUE                 TRUE                 TRUE 
 _projects/TNT.AX.md  _projects/VAS.AX.md _projects/VDHG.AX.md 
                TRUE                 TRUE                 TRUE 
 _projects/VGS.AX.md  _projects/WPL.AX.md  _projects/XRO.AX.md 
                TRUE                 TRUE                 TRUE 
> 
> for (ticker in filtered_list) {
+   export_pictures(ticker, location_asset)
+   
+   temp <- read_file("rprog/template.md")
+   temp <- str_replace_all(temp, "ticker", ticker)
+   readr::write_lines(temp, path = paste0(location_project, ticker, ".md"))
+ }
Warning message:
The `path` argument of `write_lines()` is deprecated as of readr 1.4.0.
Please use the `file` argument instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_warnings()` to see where this warning was generated. 
> 
> 
> proc.time()
   user  system elapsed 
  13.15    2.26   32.84 
